#--------------------------------------------------------- MySQL ---------------------------------------------------------
server.error.whitelabel.enabled=false

spring.profiles.active=@activatedProperties@
# ===============================
# = DATA SOURCE
# ===============================
#
#spring.datasource.url=jdbc:mysql://aa19u0ky34fz7qb.cz8mkey4tqwr.ap-south-1.rds.amazonaws.com:3306/ebdb
#spring.datasource.username=goaircon
#spring.datasource.password=goaircon2021
#spring.datasource.url=jdbc:mysql://localhost:3306/news_project
#spring.datasource.username=root
#spring.datasource.password=dhruvkadia
debug=false

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle= true
spring.datasource.tomcat.validation-query= SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=false
 
# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.properties.hibernate.hbm2ddl.auto=update

spring.jmx.enabled=false
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.messages.basename=common/messages

spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
spring.thymeleaf.enabled=true
spring.thymeleaf.servlet.content-type=text/html; charset=utf-8

authentication.oauth.clientid=stay-safe-client
#pa$$word
authentication.oauth.secret=$2a$10$9PJjMeFbUWzqyLeQGNrlseTr2l5QlBjJ2d19Hri4Q14uq4UGX8PIK


#billing.fileupload.basepath=D:\\images

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=75MB


spring.mail.username=#
spring.mail.password=#
spring.mail.host=smtp.gmail.com	
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Make the application accessible on the given context path (http://localhost:8080/	)
server.servlet.context-path=/

# Enable response compression
server.compression.enabled=true

# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# Maximum time the response should be cached (in seconds) 
spring.resources.cache.cachecontrol.max-age=120

# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true

# The resources are private and intended for a single user. They must not be stored by a shared cache (e.g CDN).
# set a boolean value true/false
spring.resources.cache.cachecontrol.cache-private = true

# The resources are public and any cache may store the response.
# set a boolean value true/false
spring.resources.cache.cachecontrol.cache-public = true

# Write files to disk if the file size is more than 2KB.
spring.servlet.multipart.file-size-threshold=2KB

# The intermediate disk location where the uploaded files are written
spring.servlet.multipart.location=/tmp


#--------------------------------------------------------- PostgreSQL ---------------------------------------------------------
#server.error.whitelabel.enabled=false

#spring.profiles.active=@activatedProperties@

# ===============================
# = DATA SOURCE POSTGRESSQL
# ===============================

#--
spring.datasource.url = jdbc:postgresql://ec2-54-211-255-161.compute-1.amazonaws.com:5432/djajhp4sqoc62
spring.datasource.username = wiqnnkychifkkc
spring.datasource.password = f08d800dc7cff45c657addf21affaf91c41071c1cf21f731bd1859e4b8f50ec7

spring.jpa.database=POSTGRESQL
#--

# Keep the connection alive if idle for a long time (needed in production)
#--
#spring.datasource.tomcat.test-while-idle= true
#spring.datasource.tomcat.validation-query= SELECT 1
#--
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#--
#spring.jpa.show-sql=false
 #--
# Hibernate ddl auto (create, create-drop, update)
#--
spring.jpa.hibernate.ddl-auto = create
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#
#spring.jmx.enabled=false
#--
# Naming strategy
#--
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#--
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#--
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
#
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#
#spring.messages.basename=common/messages
#
#spring.thymeleaf.cache=false
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.enabled=true
#spring.thymeleaf.servlet.content-type=text/html; charset=utf-8
#--